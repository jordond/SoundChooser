apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

version = "1.0.1"
group = "ca.hoogit"

android {
    compileSdkVersion 21
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 22
        versionCode 1
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    repositories {
        maven {
            url  "http://dl.bintray.com/jordond/maven"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'ca.hoogit:fabbutton:1.2.0'
}

def siteUrl = 'https://github.com/jordond/soundchooser'
def gitUrl = 'https://github.com/jordond/soundchooser.git'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "SoundChooser"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["GPL-2.0"]
        publish = true
    }
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'A Material-ish sound file chooser dialog'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'GNU General Public License, version 2'
                        url 'http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html'
                    }
                }
                developers {
                    developer {
                        id 'jordond'
                        name 'Jordon de Hoog'
                        email 'jordondehoog@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

dependencies {
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}

task wrapper(type: Wrapper) {
}